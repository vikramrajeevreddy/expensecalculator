{"version":3,"sources":["calculator/constants.js","calculator/calculateFare.js","calculator/pieChart.js","calculator/barChart.js","calculator/totalAmount.js","calculator/pdfName.js","calculator/report.js","calculator/parent.js","calculator/apartment.js","App.js","index.js"],"names":["ardenAmountNames","Rajeev","Nandan","Shreyas","Tirth","Bhanu","ardenBooleanNames","All","tivoliAmountNames","Charan","Raghava","Santhan","Jaswant","Chandu","tivoliBooleanNames","getAmountNames","value","CalculateFare","props","React","useState","apt","nameList","setNameList","name","setName","price","setPrice","useEffect","lastValue","handleCalculation","handleChange","event","target","checked","doneValue","addClick","obj","purchasedByList","count","Object","keys","length","forEach","item","pricePerPerson","handleAdd","indexValue","handleItemList","Fragment","Grid","container","spacing","style","paddingTop","xs","FormControl","sx","m","width","variant","InputLabel","htmlFor","Input","id","label","onChange","marginRight","disabled","isDone","type","startAdornment","InputAdornment","position","component","FormGroup","aria-label","row","map","key","FormControlLabel","control","Checkbox","labelPlacement","Button","backgroundColor","color","onClick","handleDone","isCompute","handleAmountChange","ChartJS","register","ArcElement","Tooltip","Legend","CategoryScale","LinearScale","BarElement","Title","options","responsive","plugins","legend","display","title","text","BarChart","chartData","setChartData","show","setShow","labels","amount","unsortedData","data","displayData","fromEntries","entries","sort","push","Math","round","datasets","index","TotalAmount","amountData","Typography","fontSize","fontWeight","gutterBottom","fsx","OutlinedInput","marginTop","PDFName","pdfText","setPdfText","md","Dialog","open","onClose","handleDialogClose","DialogContent","DialogActions","handleReport","Report","amountList","setAmountList","itemList","setItemList","openDialog","setOpenDialog","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","dummyAmountList","dummyItemList","totalData","dummyArray","itemData","endIcon","doc","jsPDF","setFontSize","setTextColor","autoTable","head","body","startY","showHead","alignOne","lastAutoTable","finalY","alignTwo","save","styled","Paper","theme","typography","body2","padding","textAlign","palette","secondary","Parent","countList","setCountList","priceList","setPriceList","selectedApt","done","setDone","compute","setCompute","setEdit","report","setReport","handlePrice","isAdd","dummyList","dummyCountList","newValue","itemName","itemPrice","purchasedBy","handleAmount","dummyData","document","getElementById","scrollIntoView","Box","flexGrow","Card","margin","CardContent","align","Apartment","setApt","handleApt","marginBottom","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ee705687.chunk.js","sourcesContent":["const ardenAmountNames = {\n  Rajeev: 0.0,\n  Nandan: 0.0,\n  Shreyas: 0.0,\n  Tirth: 0.0,\n  Bhanu: 0.0,\n};\n\nconst ardenBooleanNames = {\n  Rajeev: false,\n  Nandan: false,\n  Shreyas: false,\n  Tirth: false,\n  Bhanu: false,\n  All: false,\n};\n\nconst tivoliAmountNames = {\n  Charan: 0.0,\n  Raghava: 0.0,\n  Santhan: 0.0,\n  Jaswant: 0.0,\n  Bhanu: 0.0,\n  Chandu: 0.0,\n};\n\nconst tivoliBooleanNames = {\n  Charan: false,\n  Raghava: false,\n  Santhan: false,\n  Jaswant: false,\n  Bhanu: false,\n  Chandu: false,\n  All: false,\n};\n\nexport const getBooleanNames = (value) => {\n  if (value == 0) {\n    return ardenBooleanNames;\n  } else {\n    return tivoliBooleanNames;\n  }\n};\n\nexport const getAmountNames = (value) => {\n  if (value == 0) {\n    return ardenAmountNames;\n  } else {\n    return tivoliAmountNames;\n  }\n};\n","import React, { useEffect } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Grid from \"@mui/material/Grid\";\nimport Button from \"@mui/material/Button\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport { getBooleanNames, getAmountNames } from \"./constants\";\n\nexport default function CalculateFare(props) {\n  const [nameList, setNameList] = React.useState({ ...getBooleanNames(props.apt) });\n  const [name, setName] = React.useState(\"\");\n  const [price, setPrice] = React.useState(null);\n\n  // to handle product name\n  const handleName = (event) => {\n    setName(event.target.value);\n  };\n\n  // to call calculate method if last value\n  useEffect(() => {\n    if (!props.lastValue) {\n      handleCalculation(false, false);\n    }\n  }, [price, nameList]);\n\n  // to handle price\n  const handlePrice = (event) => {\n    setPrice(event.target.value);\n  };\n\n  // invoked on clicking done button\n  const handleDone = () => {\n    handleCalculation(true, false);\n    props.handleDone(true);\n  };\n\n  // to handle check box\n  const handleChange = (event) => {\n    setNameList({\n      ...nameList,\n      [event.target.name]: event.target.checked,\n    });\n  };\n\n  // to handle the calculation\n  const handleCalculation = (doneValue, addClick) => {\n    let obj = { ...getAmountNames(props.apt) };\n    let purchasedByList = \"\";\n    if (price !== 0) {\n      let count = 0;\n      // to get the people count involved\n      if (nameList[\"All\"] == true) {\n        count = Object.keys(nameList).length - 1;\n      } else {\n        Object.keys(nameList).forEach((item) => {\n          if (nameList[item] == true) {\n            count = count + 1;\n          }\n        });\n      }\n\n      let pricePerPerson = price / count;\n\n      // to update the shared price of product\n      Object.keys(nameList).forEach((item) => {\n        if (\n          item != \"All\" &&\n          (nameList[item] == true || nameList[\"All\"] == true)\n        ) {\n          obj[item] = obj[item] + pricePerPerson;\n          purchasedByList = purchasedByList\n            ? purchasedByList + \", \" + item\n            : purchasedByList + item;\n        }\n      });\n\n      props.handleAdd(obj, doneValue, addClick, props.indexValue);\n      // to store the items for report\n      props.handleItemList(props.indexValue, name, price, purchasedByList);\n    }\n  };\n\n  // invoked on clicking compute button\n  const handleCompute = () => {\n    props.handleAmountChange();\n  };\n\n  // invoked on clicking edit button\n  const handleEdit = () => {\n    props.handleDone(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\n        <Grid item xs={12}>\n          <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\n            <InputLabel htmlFor=\"standard-adornment-password\">\n              Product Name\n            </InputLabel>\n            <Input\n              id=\"outlined-name\"\n              label=\"Name\"\n              value={name}\n              onChange={handleName}\n              variant=\"standard\"\n              style={{ marginRight: \"20px\" }}\n              disabled={props.isDone}\n            />\n          </FormControl>\n          <FormControl sx={{ m: 1, width: \"25ch\" }} variant=\"standard\">\n            <InputLabel htmlFor=\"standard-adornment-password\">Price</InputLabel>\n            <Input\n              id=\"outlined-uncontrolled\"\n              label=\"Price\"\n              value={price}\n              type={\"number\"}\n              onChange={handlePrice}\n              variant=\"standard\"\n              startAdornment={\n                <InputAdornment position=\"start\">$</InputAdornment>\n              }\n              disabled={props.isDone}\n            />\n          </FormControl>\n        </Grid>\n        <Grid item xs={12}>\n          <FormControl sx={{ m: 3 }} component=\"fieldset\" variant=\"standard\">\n            <FormGroup aria-label=\"position\" row>\n              {Object.keys(nameList).map(function (key) {\n                return (\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={nameList[key]}\n                        onChange={handleChange}\n                        name={key}\n                        disabled={\n                          props.isDone ||\n                          (nameList[\"All\"] == true && key != \"All\")\n                        }\n                      />\n                    }\n                    label={key}\n                    labelPlacement=\"bottom\"\n                  />\n                );\n              })}\n            </FormGroup>\n          </FormControl>\n        </Grid>\n      </Grid>\n      {!props.isDone && props.lastValue ? (\n        <Button\n          variant=\"outlined\"\n          style={{\n            backgroundColor: \"green\",\n            marginRight: \"10px\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            handleCalculation(false, true);\n          }}\n        >\n          Add\n        </Button>\n      ) : null}\n      {props.lastValue && !props.isDone ? (\n        <Button\n          variant=\"outlined\"\n          style={{\n            backgroundColor: \"lightblue\",\n            marginRight: \"10px\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            handleDone();\n          }}\n        >\n          Done\n        </Button>\n      ) : null}\n      {props.lastValue && props.isDone && !props.isCompute ? (\n        <Button\n          variant=\"outlined\"\n          style={{\n            backgroundColor: \"green\",\n            marginRight: \"10px\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            handleCompute();\n          }}\n        >\n          Compute\n        </Button>\n      ) : null}\n      {props.lastValue && props.isDone && !props.isCompute ? (\n        <Button\n          variant=\"outlined\"\n          style={{\n            backgroundColor: \"lightblue\",\n            marginRight: \"10px\",\n            color: \"white\",\n          }}\n          onClick={() => {\n            handleEdit();\n          }}\n        >\n          Edit\n        </Button>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport default function PieChart(props) {\n  const [chartData, setChartData] = useState(null);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    let names = [];\n    let amount = [];\n    let displayData = props.data;\n    if (displayData !== null) {\n      Object.keys(displayData).map(function (key) {\n        names.push(key);\n        if (displayData[key] > 0) {\n          setShow(true);\n        }\n        amount.push(Math.round(displayData[key] * 100) / 100);\n      });\n    }\n    let data = {\n      labels: names,\n      datasets: [\n        {\n          label: \"Amount spent\",\n          data: amount,\n          backgroundColor: [\n            \"rgba(255, 99, 132, 0.2)\",\n            \"rgba(54, 162, 235, 0.2)\",\n            \"rgba(255, 206, 86, 0.2)\",\n            \"rgba(75, 192, 192, 0.2)\",\n            \"rgba(153, 102, 255, 0.2)\",\n            \"rgba(255, 159, 64, 0.2)\",\n          ],\n          borderColor: [\n            \"rgba(255, 99, 132, 1)\",\n            \"rgba(54, 162, 235, 1)\",\n            \"rgba(255, 206, 86, 1)\",\n            \"rgba(75, 192, 192, 1)\",\n            \"rgba(153, 102, 255, 1)\",\n            \"rgba(255, 159, 64, 1)\",\n          ],\n          borderWidth: 1,\n        },\n      ],\n    };\n\n    setChartData(data);\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      {chartData !== null && show ? (\n        <Pie\n          data={chartData}\n          height=\"350px\"\n          width=\"350px\"\n          options={{ maintainAspectRatio: false }}\n        />\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport const options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: \"top\",\n      display: false,\n    },\n    title: {\n      display: true,\n      text: \"Amount Spent\",\n    },\n  },\n};\n\nexport default function BarChart(props) {\n  const [chartData, setChartData] = useState(null);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    let labels = [];\n    let amount = [];\n    let unsortedData = props.data;\n\n    // to sort the data\n    const displayData = Object.fromEntries(\n      Object.entries(unsortedData).sort(([, a], [, b]) => a - b)\n    );\n    // to get lables and amount in list\n    if (displayData !== null) {\n      Object.keys(displayData).map(function (key) {\n        labels.push(key);\n        if (displayData[key] > 0) {\n          setShow(true);\n        }\n        amount.push(Math.round(displayData[key] * 100) / 100);\n      });\n    }\n\n    // preparing the data to show on bar chart\n    let data = {\n      labels,\n      datasets: [\n        {\n          label: \"\",\n          data: labels.map((item, index) => amount[index]),\n          backgroundColor: [\n            \"#6CFF33\",\n            \"#33FFBA\",\n            \"#33E7FF\",\n            \"#F033FF\",\n            \"#FFD233\",\n          ],\n        },\n      ],\n    };\n\n    setChartData(data);\n  }, [props]);\n\n  return (\n    <React.Fragment>\n      {chartData !== null && show ? (\n        <Bar options={options} data={chartData} />\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport OutlinedInput from '@mui/material/OutlinedInput';\nimport InputLabel from '@mui/material/InputLabel';\nimport PieChart from './pieChart';\nimport BarChart from './barChart';\n\n\nexport default function TotalAmount(props) {\n    return (\n        <React.Fragment>\n            {Object.keys(props.amountData).map(function (key) {\n                return (<Grid container spacing={2} style={{ paddingTop: \"20px\" }}>\n                    <Grid item xs={3}>\n                        <Typography sx={{ fontSize: 16, fontWeight: \"bold\" }} style={{ color: \"black\" }} gutterBottom>\n                            {key}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={9}>\n                        <FormControl fsx={{ m: 1, width: '25ch' }} >\n                            <InputLabel htmlFor=\"outlined-adornment-amount\">Amount</InputLabel>\n                            <OutlinedInput\n                                id={key}\n                                value={Math.round(props.amountData[key] * 100) / 100}\n                                startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n                                label=\"Amount\"\n                                disabled\n                            />\n                        </FormControl>\n                    </Grid>\n                </Grid>)\n            })}\n            {/* <div style={{ marginTop: \"50px\" }}>\n                <PieChart data={props.amountData} />\n            </div> */}\n            <div style={{ marginTop: \"50px\" }}>\n                <BarChart data={props.amountData} />\n            </div>\n        </React.Fragment>\n    );\n}\n","import * as React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogContentText from \"@mui/material/DialogContentText\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport Input from \"@mui/material/Input\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Grid from \"@mui/material/Grid\";\n\nexport default function PDFName(props) {\n  const [pdfText, setPdfText] = React.useState(\"\");\n\n  // to set the pdf header\n  const handlePdfText = (event) => {\n    setPdfText(event.target.value);\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={6} md={12}>\n        <Dialog open={props.open} onClose={props.handleDialogClose}>\n          <DialogContent>\n            <FormControl\n              variant=\"standard\"\n              sx={{ width: [\"25ch\", \"25ch\", \"50ch\"] }}\n            >\n              <InputLabel htmlFor=\"standard-adornment-password\">\n                What is this expense for ??\n              </InputLabel>\n              <Input\n                id=\"outlined-name\"\n                label=\"Name\"\n                value={pdfText}\n                onChange={handlePdfText}\n                variant=\"standard\"\n                style={{ marginRight: \"20px\" }}\n              />\n            </FormControl>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                props.handleReport(pdfText);\n              }}\n              disabled={pdfText == \"\" ? true : false}\n            >\n              Done\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport jsPDF from \"jspdf\";\nimport Button from \"@mui/material/Button\";\nimport autoTable from \"jspdf-autotable\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport PDFName from \"./pdfName\";\n\nexport default function Report(props) {\n  const [amountList, setAmountList] = React.useState([]);\n  const [itemList, setItemList] = React.useState([]);\n  const [openDialog, setOpenDialog] = React.useState(false);\n\n  // to get the date\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, \"0\");\n  let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  let yyyy = today.getFullYear();\n  today = mm + \"/\" + dd + \"/\" + yyyy;\n\n  useEffect(() => {\n    let dummyAmountList = [];\n    let dummyItemList = [];\n    // to arrange the total amount list\n    Object.keys(props.totalData).forEach((item) => {\n      let dummyArray = [];\n      dummyArray.push(item);\n      dummyArray.push(Math.round(props.totalData[item] * 100) / 100);\n      dummyAmountList.push(dummyArray);\n    });\n    setAmountList(dummyAmountList);\n\n    // to arrange the all items list\n    props.itemData.forEach((data) => {\n      let dummyArray = [];\n      Object.keys(data).forEach((value) => {\n        dummyArray.push(data[value]);\n      });\n      dummyItemList.push(dummyArray);\n      setItemList(dummyItemList);\n    });\n  }, []);\n\n  const handleDialogOpen = () => {\n    setOpenDialog(true);\n  };\n\n  const handleDialogClose = () => {\n    setOpenDialog(false);\n  };\n\n  // to handle the report download\n  const Report = (pdfText) => {\n    handleDialogClose();\n    const doc = new jsPDF(\"l\", \"mm\", [297, 210]);\n\n    doc.setFontSize(18);\n    doc.text(pdfText, 14, 20);\n    doc.setTextColor(100);\n\n    doc.setFontSize(18);\n    doc.text(\"Individual Expenses Summary \", 14, 30);\n    doc.setTextColor(100);\n\n    autoTable(doc, {\n      head: [[\"Name\", \"Amount ($)\"]],\n      body: amountList,\n      startY: 35,\n      showHead: \"firstPage\",\n    });\n\n    // to get where the last table ended\n    let alignOne = doc.lastAutoTable.finalY + 15;\n\n    doc.setFontSize(18);\n    doc.text(\"Details of Items Purchased \", 14, alignOne);\n    doc.setTextColor(100);\n\n    autoTable(doc, {\n      head: [[\"Product\", \"Price ($)\", \"Purchased By\"]],\n      body: itemList,\n      startY: alignOne + 5,\n    });\n\n    let alignTwo = doc.lastAutoTable.finalY + 15;\n\n    doc.setFontSize(10);\n    doc.text(`This PDF is generated on ` + today, 200, alignTwo);\n    doc.setTextColor(100);\n\n    doc.save(\"Expenses_\" + today + \"_.pdf\");\n  };\n\n  return (\n    <div>\n      <Button\n        variant=\"outlined\"\n        style={{ backgroundColor: \"green\", color: \"white\" }}\n        onClick={() => {\n          handleDialogOpen();\n        }}\n        endIcon={<DownloadIcon />}\n      >\n        Report\n      </Button>\n      <PDFName\n        open={openDialog}\n        handleDialogClose={handleDialogClose}\n        handleReport={Report}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Paper from \"@mui/material/Paper\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport CalculateFare from \"./calculateFare\";\nimport TotalAmount from \"./totalAmount\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport { getAmountNames } from \"./constants\";\nimport Report from \"./report\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: theme.palette.text.secondary,\n}));\n\nexport default function Parent(props) {\n  const [countList, setCountList] = React.useState([0]);\n  const [priceList, setPriceList] = React.useState([]);\n  const [amountList, setAmountList] = React.useState({ ...getAmountNames(props.selectedApt) });\n  const [done, setDone] = React.useState(false);\n  const [compute, setCompute] = React.useState(false);\n  const [edit, setEdit] = React.useState(false);\n  const [report, setReport] = React.useState(false);\n  const [itemList, setItemList] = React.useState([]);\n\n  // to set done and edit values\n  const handleDone = (value) => {\n    if (value == false) {\n      setEdit(true);\n    }\n    setDone(value);\n  };\n\n  // to store the calculation data after adding every new item\n  const handlePrice = (value, isDone, isAdd, index) => {\n    let dummyList = [...priceList];\n    if (dummyList.length > index) {\n      dummyList[index] = value;\n    } else {\n      dummyList.push(value);\n    }\n    if (isAdd && !isDone) {\n      let dummyCountList = [...countList];\n      let newValue = dummyCountList.length + 1;\n      dummyCountList.push(newValue);\n      setCountList(dummyCountList);\n    }\n    setPriceList(dummyList);\n  };\n\n  // to get the details of items for report\n  const handleItemList = (index, name, price, purchasedByList) => {\n    let dummyItemList = [...itemList];\n    let obj = {\n      itemName: name,\n      itemPrice: price,\n      purchasedBy: purchasedByList,\n    };\n    if (dummyItemList.length > index) {\n      dummyItemList[index] = obj;\n    } else {\n      dummyItemList.push(obj);\n    }\n    setItemList(dummyItemList);\n  };\n\n  // to calculate the final amount and to scroll to top of the page\n  const handleAmount = () => {\n    setCompute(true);\n    let dummyData = { ...amountList };\n    priceList.forEach((price) => {\n      Object.keys(price).forEach((item) => {\n        dummyData[item] = dummyData[item] + price[item];\n      });\n    });\n    setAmountList(dummyData);\n    setReport(true);\n    var elmnt = document.getElementById(\"card\");\n    elmnt.scrollIntoView();\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Card\n            style={{ margin: \"10px\", backgroundColor: \"aliceblue\" }}\n            id=\"card\"\n          >\n            <CardContent>\n              <Grid container spacing={1}>\n                <Grid item xs={6}>\n                  <Typography\n                    sx={{ fontSize: 16, fontWeight: \"bold\" }}\n                    style={{ color: \"cadetblue\" }}\n                    gutterBottom\n                  >\n                    {`Total Amount`}\n                  </Typography>\n                </Grid>\n                <Grid item xs={6} align=\"right\">\n                  {report ? (\n                    <Report totalData={amountList} itemData={itemList} />\n                  ) : null}\n                </Grid>\n              </Grid>\n              <TotalAmount amountData={amountList} />\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Card style={{ margin: \"10px\", backgroundColor: \"antiquewhite\" }}>\n            <CardContent>\n              <Typography\n                sx={{ fontSize: 16, fontWeight: \"bold\" }}\n                style={{ color: \"cadetblue\" }}\n                gutterBottom\n              >\n                {`Calculate Fare`}\n              </Typography>\n              {countList.map((item, index) => {\n                return (\n                  <CalculateFare\n                    handleAmountChange={handleAmount}\n                    handleAdd={handlePrice}\n                    lastValue={countList.length == index + 1}\n                    indexValue={index}\n                    isDone={done}\n                    isCompute={compute}\n                    handleDone={handleDone}\n                    handleItemList={handleItemList}\n                    apt={props.selectedApt}\n                  />\n                );\n              })}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Grid from \"@mui/material/Grid\";\nimport Parent from \"./parent\";\n\nexport default function Apartment() {\n  const [apt, setApt] = React.useState(null);\n\n  const handleApt = (value) => {\n    setApt(value);\n  };\n\n  return (\n    <React.Fragment>\n      {apt != null ? (\n        <Parent selectedApt={apt} />\n      ) : (\n        <marquee style={{ color: \"#040805\", fontSize: \"25px\" }}>\n          Please contact for any changes.\n        </marquee>\n      )}\n      {apt == null ? (\n        <Grid container spacing={2}>\n          <Grid item xs={0} md={3} align=\"center\"></Grid>\n          <Grid item xs={12} md={6} align=\"center\">\n            <Card\n              style={{ margin: \"10px\", backgroundColor: \"#3F4641\" }}\n              id=\"card\"\n            >\n              <CardContent>\n                <Typography\n                  style={{\n                    fontSize: 16,\n                    fontWeight: \"bold\",\n                    color: \"#C8CAB8\",\n                  }}\n                  gutterBottom\n                >\n                  Select Apartment\n                </Typography>\n              </CardContent>\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  style={{\n                    backgroundColor: \"#309755\",\n                    color: \"white\",\n                    marginBottom: \"20px\",\n                  }}\n                  onClick={() => {\n                    handleApt(0);\n                  }}\n                >\n                  Arden\n                </Button>\n              </div>\n              <div>\n                <Button\n                  variant=\"outlined\"\n                  style={{\n                    backgroundColor: \"#309755\",\n                    color: \"white\",\n                    marginBottom: \"20px\",\n                  }}\n                  onClick={() => {\n                    handleApt(1);\n                  }}\n                >\n                  Tivoli\n                </Button>\n              </div>\n            </Card>\n          </Grid>\n          <Grid item xs={0} md={3} align=\"center\"></Grid>\n        </Grid>\n      ) : null}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Apartment from \"./calculator/apartment\";\n\n\nfunction App() {\n  return (\n    <React.Fragment> \n      <Apartment/>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}